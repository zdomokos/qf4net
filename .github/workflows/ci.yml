name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dotnet-version: ['8.0.x']

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Restore dependencies
      run: dotnet restore src/qf4net.csproj

    - name: Build library
      run: dotnet build src/qf4net.csproj --no-restore --configuration Release

    - name: Run tests
      run: dotnet test tests/UnitTests.csproj --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage"

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: '**/coverage.cobertura.xml'
        fail_ci_if_error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  package:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore src/qf4net.csproj

    - name: Build library
      run: dotnet build src/qf4net.csproj --no-restore --configuration Release

    - name: Pack NuGet package
      run: dotnet pack src/qf4net.csproj --no-build --configuration Release --output ./artifacts

    - name: Upload package artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./artifacts/*.nupkg